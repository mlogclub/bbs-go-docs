import{_ as a,c as e,o as i,a2 as t}from"./chunks/framework.v2dllGfT.js";const k=JSON.parse('{"title":"安装site模块","description":"","frontmatter":{},"headers":[],"relativePath":"docs/getstart/installation/site/install-site.md","filePath":"docs/getstart/installation/site/install-site.md"}'),l={name:"docs/getstart/installation/site/install-site.md"};function n(p,s,h,d,o,r){return i(),e("div",null,s[0]||(s[0]=[t('<h1 id="安装site模块" tabindex="-1">安装site模块 <a class="header-anchor" href="#安装site模块" aria-label="Permalink to “安装site模块”">​</a></h1><h2 id="安装依赖" tabindex="-1">安装依赖 <a class="header-anchor" href="#安装依赖" aria-label="Permalink to “安装依赖”">​</a></h2><p>安装之前请确保你的电脑上正确安装了<code>nodejs 20+</code>。site模块的以来管理推荐使用pnpm，如果你的电脑上没安装pnpm，请先执行下面命令安装pnpm:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pnpm</span></span></code></pre></div><p>安装成功后进入源码site目录，执行下面命令安装依赖：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><p>直至提示成功。</p><h2 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to “配置”">​</a></h2><p>在site的配置示例文件为：<code>.env.example</code>，你可以根据你不同的环境复制并重命名该文件后，修改文件中对应配置：</p><ul><li>开发环境：.env.dev</li><li>生产环境：.env.production</li></ul><p>目前只有一个配置项：<code>SERVER_URL</code>，该配置为server端接口服务地址，请正确配置为你自己的服务地址即可。</p><h2 id="以调试模式启动" tabindex="-1">以调试模式启动 <a class="header-anchor" href="#以调试模式启动" aria-label="Permalink to “以调试模式启动”">​</a></h2><p>执行下面命令启动服务：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre></div><p>服务默认端口为<code>3000</code>，服务启动成功后可以在浏览器中正确访问。</p><h2 id="编译" tabindex="-1">编译 <a class="header-anchor" href="#编译" aria-label="Permalink to “编译”">​</a></h2><p>执行下面命令编译服务：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div>',18)]))}const g=a(l,[["render",n]]);export{k as __pageData,g as default};
