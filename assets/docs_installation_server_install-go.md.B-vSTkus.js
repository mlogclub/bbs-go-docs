import{_ as i,c as a,o as l,a2 as n}from"./chunks/framework.v2dllGfT.js";const c=JSON.parse('{"title":"安装 Go 语言环境","description":"","frontmatter":{},"headers":[],"relativePath":"docs/installation/server/install-go.md","filePath":"docs/installation/server/install-go.md"}'),e={name:"docs/installation/server/install-go.md"};function h(p,s,t,o,k,d){return l(),a("div",null,s[0]||(s[0]=[n(`<h1 id="安装-go-语言环境" tabindex="-1">安装 Go 语言环境 <a class="header-anchor" href="#安装-go-语言环境" aria-label="Permalink to “安装 Go 语言环境”">​</a></h1><h2 id="安装-go" tabindex="-1">安装 Go <a class="header-anchor" href="#安装-go" aria-label="Permalink to “安装 Go”">​</a></h2><p>请去官网 <a href="https://go.dev/dl/" target="_blank" rel="noreferrer">https://go.dev/dl/</a> 下载对应系统的 Go 语言安装包。<code>推荐版本：go1.23 +</code></p><h3 id="windows-安装" tabindex="-1">Windows 安装 <a class="header-anchor" href="#windows-安装" aria-label="Permalink to “Windows 安装”">​</a></h3><ol><li>下载 Windows 版本的 Go 安装包（.msi 文件）</li><li>双击安装包并按照安装向导进行安装</li><li>默认情况下，Go 会安装到 <code>C:\\Program Files\\Go</code> 或 <code>C:\\Go</code> 目录</li><li>安装过程会自动将 Go 的 bin 目录添加到系统环境变量 PATH 中</li><li>打开命令提示符（CMD）或 PowerShell，输入 <code>go version</code> 验证安装是否成功</li></ol><h3 id="macos-安装" tabindex="-1">macOS 安装 <a class="header-anchor" href="#macos-安装" aria-label="Permalink to “macOS 安装”">​</a></h3><ol><li><p>下载 macOS 版本的 Go 安装包（.pkg 文件）</p></li><li><p>双击安装包并按照安装向导进行安装</p></li><li><p>默认情况下，Go 会安装到 <code>/usr/local/go</code> 目录</p></li><li><p>打开终端，编辑 <code>~/.zshrc</code> 或 <code>~/.bash_profile</code> 文件，添加以下环境变量：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GOPATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$HOME/go</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GOROOT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/usr/local/go</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$PATH:$GOROOT/bin:$GOPATH/bin</span></span></code></pre></div></li><li><p>执行 <code>source ~/.zshrc</code> 或 <code>source ~/.bash_profile</code> 使配置生效</p></li><li><p>输入 <code>go version</code> 验证安装是否成功</p></li></ol><h3 id="linux-安装" tabindex="-1">Linux 安装 <a class="header-anchor" href="#linux-安装" aria-label="Permalink to “Linux 安装”">​</a></h3><ol><li><p>下载对应系统架构的 Linux 版本 Go 压缩包（.tar.gz 文件）</p></li><li><p>解压到 <code>/usr/local</code> 目录：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -C</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -xzf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> go</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.tar.gz</span></span></code></pre></div></li><li><p>编辑 <code>~/.bashrc</code> 或 <code>~/.profile</code> 文件，添加以下环境变量：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GOPATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$HOME/go</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GOROOT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/usr/local/go</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$PATH:$GOROOT/bin:$GOPATH/bin</span></span></code></pre></div></li><li><p>执行 <code>source ~/.bashrc</code> 或 <code>source ~/.profile</code> 使配置生效</p></li><li><p>输入 <code>go version</code> 验证安装是否成功</p></li></ol><h2 id="配置-go-proxy" tabindex="-1">配置 Go Proxy <a class="header-anchor" href="#配置-go-proxy" aria-label="Permalink to “配置 Go Proxy”">​</a></h2><p>Go 1.13 版本之后，Go 引入了 GOPROXY 环境变量，用于设置 Go 模块代理，加速依赖包的下载。在国内网络环境下，建议配置国内镜像源。</p><h3 id="windows-配置" tabindex="-1">Windows 配置 <a class="header-anchor" href="#windows-配置" aria-label="Permalink to “Windows 配置”">​</a></h3><p>打开命令提示符（CMD）或 PowerShell，设置环境变量：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置 GOPROXY</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GOPROXY=https://goproxy.cn,direct</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置 GOSUMDB（可选，用于校验模块）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GOSUMDB=sum.golang.org</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置 GO111MODULE，启用 Go Module 模式</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GO111MODULE=on</span></span></code></pre></div><h3 id="macos-linux-配置" tabindex="-1">macOS/Linux 配置 <a class="header-anchor" href="#macos-linux-配置" aria-label="Permalink to “macOS/Linux 配置”">​</a></h3><p>在终端中执行以下命令：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置 GOPROXY</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GOPROXY=https://goproxy.cn,direct</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置 GOSUMDB（可选，用于校验模块）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GOSUMDB=sum.golang.org</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置 GO111MODULE，启用 Go Module 模式</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GO111MODULE=on</span></span></code></pre></div><p>也可以将这些配置添加到你的 shell 配置文件（如 <code>.bashrc</code>、<code>.zshrc</code> 或 <code>.profile</code>）中：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GOPROXY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">https://goproxy.cn,direct</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GOSUMDB</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sum.golang.org</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GO111MODULE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">on</span></span></code></pre></div><h3 id="常用的-go-代理地址" tabindex="-1">常用的 Go 代理地址 <a class="header-anchor" href="#常用的-go-代理地址" aria-label="Permalink to “常用的 Go 代理地址”">​</a></h3><ol><li><p>中国大陆推荐：</p><ul><li>七牛云 Goproxy: <code>https://goproxy.cn,direct</code></li><li>阿里云 Goproxy: <code>https://mirrors.aliyun.com/goproxy/,direct</code></li></ul></li><li><p>全球通用：</p><ul><li>官方代理: <code>https://proxy.golang.org,direct</code></li><li>Google 代理: <code>https://goproxy.io,direct</code></li></ul></li></ol><p>配置完成后，可以通过以下命令验证设置是否生效：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GOPROXY</span></span></code></pre></div><p>合理设置 Go 代理能够显著提高依赖包的下载速度，特别是在网络访问受限的环境中。</p>`,24)]))}const g=i(e,[["render",h]]);export{c as __pageData,g as default};
