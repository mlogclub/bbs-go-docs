import{_ as n,c as a,o as p,a2 as l}from"./chunks/framework.v2dllGfT.js";const m=JSON.parse('{"title":"代码结构","description":"","frontmatter":{},"headers":[],"relativePath":"zh/docs/installation/index.md","filePath":"zh/docs/installation/index.md"}'),e={name:"zh/docs/installation/index.md"};function i(c,s,t,o,r,d){return p(),a("div",null,s[0]||(s[0]=[l(`<h1 id="代码结构" tabindex="-1">代码结构 <a class="header-anchor" href="#代码结构" aria-label="Permalink to “代码结构”">​</a></h1><h2 id="模块划分" tabindex="-1">模块划分 <a class="header-anchor" href="#模块划分" aria-label="Permalink to “模块划分”">​</a></h2><p>bbs-go采用前后端分离设计，一共分为三个模块：</p><ul><li>server 使用go语言开发的服务端接口服务</li><li>site 使用node + nuxt开发的前台页面服务</li><li>admin 使用vue + arco 开发的后台管理系统</li></ul><h2 id="获取最新源码" tabindex="-1">获取最新源码 <a class="header-anchor" href="#获取最新源码" aria-label="Permalink to “获取最新源码”">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>请先确保会使用Git，Git使用教程：<a href="https://www.google.com" target="_blank" rel="noreferrer">https://www.google.com</a></p></div><p>GitHub和Gitee上都有最新版本的源码，项目地址分别为：</p><ul><li><a href="https://github.com/mlogclub/bbs-go" target="_blank" rel="noreferrer">https://github.com/mlogclub/bbs-go</a></li><li><a href="https://gitee.com/mlogclub/bbs-go" target="_blank" rel="noreferrer">https://gitee.com/mlogclub/bbs-go</a></li></ul><p>以GitHub为例，执行下面命令将代码Clone到本地</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@github.com:mlogclub/bbs-go.git</span></span></code></pre></div><h2 id="目录结构" tabindex="-1">目录结构 <a class="header-anchor" href="#目录结构" aria-label="Permalink to “目录结构”">​</a></h2><div class="language-plain vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plain</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>.</span></span>
<span class="line"><span>├── LICENSE</span></span>
<span class="line"><span>├── README.md</span></span>
<span class="line"><span>├── docker-compose.yml</span></span>
<span class="line"><span>├── server                        // server服务端模块</span></span>
<span class="line"><span>│   ├── Dockerfile</span></span>
<span class="line"><span>│   ├── LICENSE</span></span>
<span class="line"><span>│   ├── Makefile</span></span>
<span class="line"><span>│   ├── README.md</span></span>
<span class="line"><span>│   ├── bbs-go.docker.yaml</span></span>
<span class="line"><span>│   ├── bbs-go.example.yaml</span></span>
<span class="line"><span>│   ├── cmd</span></span>
<span class="line"><span>│   │   ├── server</span></span>
<span class="line"><span>│   │   └── test</span></span>
<span class="line"><span>│   ├── go.mod</span></span>
<span class="line"><span>│   ├── go.sum</span></span>
<span class="line"><span>│   ├── internal</span></span>
<span class="line"><span>│   │   ├── cache</span></span>
<span class="line"><span>│   │   ├── controllers</span></span>
<span class="line"><span>│   │   ├── middleware</span></span>
<span class="line"><span>│   │   ├── models</span></span>
<span class="line"><span>│   │   ├── pkg</span></span>
<span class="line"><span>│   │   ├── repositories</span></span>
<span class="line"><span>│   │   ├── scheduler</span></span>
<span class="line"><span>│   │   ├── server</span></span>
<span class="line"><span>│   │   ├── services</span></span>
<span class="line"><span>│   │   └── spam</span></span>
<span class="line"><span>│   └── start.sh</span></span>
<span class="line"><span>├── site                          // site模块</span></span>
<span class="line"><span>│   ├── Dockerfile</span></span>
<span class="line"><span>│   ├── README.md</span></span>
<span class="line"><span>│   ├── ecosystem.config.js</span></span>
<span class="line"><span>│   ├── nuxt.config.ts</span></span>
<span class="line"><span>│   ├── package.json</span></span>
<span class="line"><span>│   ├── pnpm-lock.yaml</span></span>
<span class="line"><span>│   ├── server</span></span>
<span class="line"><span>│   │   └── tsconfig.json</span></span>
<span class="line"><span>│   ├── src</span></span>
<span class="line"><span>│   │   ├── app.vue</span></span>
<span class="line"><span>│   │   ├── assets</span></span>
<span class="line"><span>│   │   ├── components</span></span>
<span class="line"><span>│   │   ├── composables</span></span>
<span class="line"><span>│   │   ├── error.vue</span></span>
<span class="line"><span>│   │   ├── layouts</span></span>
<span class="line"><span>│   │   ├── middleware</span></span>
<span class="line"><span>│   │   ├── pages</span></span>
<span class="line"><span>│   │   ├── public</span></span>
<span class="line"><span>│   │   ├── server</span></span>
<span class="line"><span>│   │   └── stores</span></span>
<span class="line"><span>│   └── tsconfig.json</span></span>
<span class="line"><span>├── admin                         // admin模块</span></span>
<span class="line"><span>│   ├── CNAME</span></span>
<span class="line"><span>│   ├── Dockerfile</span></span>
<span class="line"><span>│   ├── babel.config.js</span></span>
<span class="line"><span>│   ├── commitlint.config.js</span></span>
<span class="line"><span>│   ├── components.d.ts</span></span>
<span class="line"><span>│   ├── config</span></span>
<span class="line"><span>│   │   ├── plugin</span></span>
<span class="line"><span>│   │   ├── utils</span></span>
<span class="line"><span>│   │   ├── vite.config.base.ts</span></span>
<span class="line"><span>│   │   ├── vite.config.dev.ts</span></span>
<span class="line"><span>│   │   ├── vite.config.docker.ts</span></span>
<span class="line"><span>│   │   └── vite.config.prod.ts</span></span>
<span class="line"><span>│   ├── index.html</span></span>
<span class="line"><span>│   ├── package.json</span></span>
<span class="line"><span>│   ├── pnpm-lock.yaml</span></span>
<span class="line"><span>│   ├── src</span></span>
<span class="line"><span>│   │   ├── App.vue</span></span>
<span class="line"><span>│   │   ├── api</span></span>
<span class="line"><span>│   │   ├── assets</span></span>
<span class="line"><span>│   │   ├── components</span></span>
<span class="line"><span>│   │   ├── composables</span></span>
<span class="line"><span>│   │   ├── directive</span></span>
<span class="line"><span>│   │   ├── env.d.ts</span></span>
<span class="line"><span>│   │   ├── hooks</span></span>
<span class="line"><span>│   │   ├── layout</span></span>
<span class="line"><span>│   │   ├── locale</span></span>
<span class="line"><span>│   │   ├── main.ts</span></span>
<span class="line"><span>│   │   ├── router</span></span>
<span class="line"><span>│   │   ├── store</span></span>
<span class="line"><span>│   │   ├── types</span></span>
<span class="line"><span>│   │   ├── utils</span></span>
<span class="line"><span>│   │   └── views</span></span>
<span class="line"><span>└── └── tsconfig.json</span></span></code></pre></div><h2 id="安装概述" tabindex="-1">安装概述 <a class="header-anchor" href="#安装概述" aria-label="Permalink to “安装概述”">​</a></h2><p>BBS-Go 的安装过程分为三个主要部分，分别对应三个模块：</p><ol><li>Server 模块：提供后端 API 服务</li><li>Site 模块：提供前台页面展示</li><li>Admin 模块：提供后台管理界面</li></ol><p>建议的安装顺序是先安装并配置 Server 模块，然后再安装 Site 和 Admin 模块。</p><h3 id="环境要求" tabindex="-1">环境要求 <a class="header-anchor" href="#环境要求" aria-label="Permalink to “环境要求”">​</a></h3><p>在开始安装前，请确保您的系统满足以下基本要求：</p><ul><li>Go 语言环境（推荐 Go 1.23+）</li><li>Node.js 环境（推荐 Node 20+）</li><li>MySQL 数据库（推荐 MySQL 8.0+）</li><li>可选：Redis、阿里云 OSS 或本地文件存储</li></ul><h3 id="server-模块安装简介" tabindex="-1">Server 模块安装简介 <a class="header-anchor" href="#server-模块安装简介" aria-label="Permalink to “Server 模块安装简介”">​</a></h3><p>Server 模块是整个系统的基础，负责处理所有的业务逻辑和数据存储。主要安装步骤包括：</p><ol><li>安装 Go 语言环境</li><li>配置 Go 代理（国内用户推荐）</li><li>安装项目依赖</li><li>配置数据库和其他服务</li><li>编译和运行 Server 模块</li></ol><p>详细安装步骤请参考：<a href="./server/install-go.html">Server 模块安装</a></p><h3 id="site-模块安装简介" tabindex="-1">Site 模块安装简介 <a class="header-anchor" href="#site-模块安装简介" aria-label="Permalink to “Site 模块安装简介”">​</a></h3><p>Site 模块是面向用户的前台界面，负责内容的展示和用户交互。主要安装步骤包括：</p><ol><li>安装 Node.js 环境</li><li>安装 pnpm 包管理器</li><li>安装项目依赖</li><li>配置 Site 模块与 Server 的连接</li><li>编译和运行 Site 模块</li></ol><p>详细安装步骤请参考：<a href="./site/install-node.html">Site 模块安装</a></p><h3 id="admin-模块安装简介" tabindex="-1">Admin 模块安装简介 <a class="header-anchor" href="#admin-模块安装简介" aria-label="Permalink to “Admin 模块安装简介”">​</a></h3><p>Admin 模块是后台管理系统，负责内容管理、用户管理等管理功能。主要安装步骤包括：</p><ol><li>安装 Node.js 环境</li><li>安装 pnpm 包管理器</li><li>安装项目依赖</li><li>配置 Admin 模块与 Server 的连接</li><li>编译和运行 Admin 模块</li></ol><p>Admin 模块的配置主要是通过环境变量文件（<code>.env.development</code>、<code>.env.production</code>）来设置 API 地址：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>VITE_API_BASE_URL=http://localhost:8082  # Server 模块地址</span></span>
<span class="line"><span>VITE_API_SITE_URL=http://localhost:3000  # Site 模块地址</span></span></code></pre></div><h2 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to “常见问题”">​</a></h2><p>安装过程中可能遇到的常见问题：</p><ol><li>数据库连接问题：确保 MySQL 服务正常运行，且配置的用户名、密码和数据库名称正确。</li><li>端口占用问题：默认情况下，Server 使用 8082 端口，Site 使用 3000 端口，如果端口被占用需要修改配置。</li><li>文件上传问题：如果使用本地存储，确保配置的目录具有写入权限；如果使用阿里云 OSS，确保 AccessId 和 AccessSecret 配置正确。</li><li>跨域问题：在开发环境中，确保 Server 模块的 AllowedOrigins 配置正确。</li></ol><p>如果您在安装过程中遇到其他问题，请查看我们的问题反馈页面或在 GitHub 上提交 issue。</p>`,36)]))}const b=n(e,[["render",i]]);export{m as __pageData,b as default};
